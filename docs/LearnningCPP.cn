2008年 08月 27日 星期三 21:25:39 CST
chapter 1 ~ 2:
    1, print 语句调用str()函数显示对象,而交互式解释器则调用repr()函数来显示对象.
    2, 下划线(_)在解释器中有特别的含义,表示最后一个表达式的值.
    3, >>> 3 < 4 < 5
       True
    4, 请不要将Python的长整数与C语言的长整数混淆.Python的长整数所能表达的范围远远超过C语言的长整数,事实上,Python长整数仅受限于用户计算机的虚拟内存总数.从长远来看,整型与长整型正在逐步统一为一种整数类型.从Python2.3开始,再也不会报整型溢出错误,结果会自动的被转换为长整数.
    5, 字符串有其特有的索引规则:第一个字符的索引是0,最后一个字符的索引是－1.
    6, sqdEvens = [x ** 2 for x in range(8) if not x % 2]
    7, __init__()可以被当成构建函数,不过不象其它语言中的构建函数,它并不创建实例--它仅仅是你的对象创建后执行的第一个方法.
    8, range([[start,]stop[,step]),实际中如何定义optional arguments?

2008年 08月 28日 星期四 09:23:36 CST
chapter 3:
    1, 在使用闭合操作符时,单一语句可以跨多行,例如:在含有小括号,中括号,花括号时可以多行书写.
    2, 在Python语言中,对象是通过引用传递的.在赋值时,不管这个对象是新创建的,还是一个已经存在的,都是将该对象的引用(并不是值)赋值给变量.
    3, Python的赋值语句不会返回值.
    4, x, y = y, x
    5, 􀁺_xxx: 不用'from module import *'导入
        __xxx__: 系统定义名字
􀁺       __xxx: 类中的私有变量名
    6, 如果模块是被导入,__name__的值为模块名字
       如果模块是被直接执行,__name__的值为'__main__'
    7, 当字符串对象"xyz"被创建并赋值给foo时,它的引用计数是1.当增加了一个别名bar时,引用计数变成了2.不过当foo被重新赋值给整数对象123时,xyz 对象的引用计数自动减1,又重新变成了1.

chapter 4:
    1, 因为在Python中类型也是对象,所以type()返回的是对象而不是简单的字符串.
    2, 所有标准对象均可用于布尔测试,同类型的对象之间可以比较大小.每个对象天生具有布尔True或False 值.空对象,值为零的任何数字或者Null对象None的布尔值都是False.
    3, 不同于很多其它语言,多个比较操作可以在同一行上进行,求值顺序为从左到右.
        >>> 4 < 3 < 5 != 2 < 7
    4, Python提供了is和is not运算符来测试两个变量是否指向同一个对象.
    5, 如果是用户自定义对象,cmp()会调用该类的特殊方法__cmp__().
    6, 也就是说repr()输出对Python比较友好,而str()的输出对人比较友好.
    7, Python 2.2统一了类型和类,所有的内建类型现在也都是类,在这基础之上,原来的所谓内建转换函数象int(),type(),list()等等,现在都成了工厂函数.也就是说虽然他们看上去有点象函数,实质上他们是类.当你调用它们时,实际上是生成了该类型的一个实例,就象工厂生产货物一样.

chapter 5:
    1, bool(obj)返回obj对象的布尔值,也就是obj.__nonzero__()方法的返回值.
    2, 没有__nonzero__()方法的对象的默认值是True.

chapter 6:
    1, 所谓浅拷贝就是只拷贝了对对象的索引,而不是重新建立了一个对象!如果你想完全的拷贝一个对象(包括递归,如果你的对象是一个包含在容器中的容器),你需要用到深拷贝,关于浅拷贝和深拷贝的更多信息会在本章的末尾讲到.
